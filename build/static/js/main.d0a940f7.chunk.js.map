{"version":3,"sources":["components/digit.js","components/styling-ui.js","App.js","serviceWorker.js","index.js"],"names":["patterns","Digit","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","react_default","a","createElement","Fragment","className","number","map","p","i","concat","key","style","opacity","background","color","jsx","React","Component","StylingUI","state","picker","x","y","gradientLight","h","s","l","gradientDark","pickerCursor","createRef","colorPicker","gradientLight_cursor","gradientDark_cursor","getColor","bind","assertThisInitialized","getGradientLight","getGradientDark","e","_this$pickerCursor$cu","current","getBoundingClientRect","cursorWidth","width","cursorHeight","height","_this$colorPicker$cur","left","top","Math","min","max","setState","floor","updateColor","_this$gradientLight_c","_this$gradientLight$c","updateBackground","to","_this$gradientDark_cu","_this$gradientDark$cu","from","_this2","addEventListener","window","removeEventListener","id","name","type","onClick","toggleTick","htmlFor","ref","transform","App","dateNow","time","hours","minutes","seconds","showUI","tick","counter","updateDate","toggleUI","d","Date","now","getHours","getMinutes","slice","getSeconds","_ref","_ref2","console","log","updateFrom","updateTo","target","checked","setInterval","keys","k","timeIndex","parseInt","split","n","digit","join","styling_ui","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d0a940f7.chunk.js","sourcesContent":["import React from 'react'\n\nconst patterns = [\n// A  B  C  D  E  F  G\n  [1, 1, 1, 1, 1, 1, 0], // 0\n  [0, 1, 1, 0, 0, 0, 0], // 1\n  [1, 1, 0, 1, 1, 0, 1], // 2\n  [1, 1, 1, 1, 0, 0, 1], // 3\n  [0, 1, 1, 0, 0, 1, 1], // 4\n  [1, 0, 1, 1, 0, 1, 1], // 5\n  [1, 0, 1, 1, 1, 1, 1], // 6\n  [1, 1, 1, 0, 0, 0, 0], // 7\n  [1, 1, 1, 1, 1, 1, 1], // 8\n  [1, 1, 1, 1, 0, 1, 1], // 9\n]\n\nclass Digit extends React.Component {\n  constructor (props) {\n    super(props)\n  }\n\n  render () {\n    return <>\n      <div className=\"digit\">\n        <div className=\"wrapper\">\n          {\n            patterns[this.props.number]\n              .map((p, i) => <div\n                  className={ `segment segment__${i}` }\n                  key={`segment-${i}`}\n                  style={{\n                    opacity: p ? 0.9 : 0.05,\n                    background: this.props.color,\n                  }}\n                ></div>\n              )\n          }\n        </div>\n      </div>\n\n\n      <style jsx>{`\n        * {\n          box-sizing: border-box;\n        }\n\n        .digit {\n          display: inline-block;\n          vertical-align: top;\n          margin: 0;\n          padding: 0;\n        }\n\n        .wrapper {\n          position: relative;\n          display: inline-block;\n          width: 100px;\n          height: 200px;\n          padding: 12px;\n        }\n\n        .segment {\n          transition: opacity 250ms;\n          position: absolute;\n          display: block;\n          top: 0;\n          left: 0;\n          width: 10px;\n          height: 60px;\n          background: white;\n          transform-origin: 0 0;\n          color: white;\n          border-radius: 10px;\n        }\n\n        .segment__0 {\n          transform: translate(20px, 20px) rotate(-90deg)\n        }\n        .segment__1 {\n          transform: translate(80px, 20px) rotate(0)\n        }\n        .segment__2 {\n          transform: translate(80px, 90px) rotate(0)\n        }\n        .segment__3 {\n          transform: translate(20px, 160px) rotate(-90deg)\n        }\n        .segment__4 {\n          transform: translate(10px, 90px) rotate(0)\n        }\n        .segment__5 {\n          transform: translate(10px, 20px) rotate(0)\n        }\n        .segment__6 {\n          transform: translate(20px, 90px) rotate(-90deg)\n        }\n\n      `}</style>\n    </>\n  }\n}\n\nexport default Digit\n","import React from 'react'\n\n\nclass StylingUI extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      picker: {\n        x: 0,\n        y: 0,\n      },\n      gradientLight: {\n        x: 0,\n        y: 0,\n        h: 0,\n        s: 0,\n        l: 0,\n      },\n      gradientDark: {\n        x: 0,\n        y: 0,\n        h: 0,\n        s: 0,\n        l: 0,\n      },\n    }\n    this.pickerCursor = React.createRef()\n    this.colorPicker = React.createRef()\n\n    this.gradientLight = React.createRef()\n    this.gradientLight_cursor = React.createRef()\n\n    this.gradientDark = React.createRef()\n    this.gradientDark_cursor = React.createRef()\n\n    this.getColor = this.getColor.bind(this)\n    this.getGradientLight = this.getGradientLight.bind(this)\n    this.getGradientDark = this.getGradientDark.bind(this)\n  }\n\n  getColor (e) {\n    const { width: cursorWidth, height: cursorHeight } = this.pickerCursor.current.getBoundingClientRect()\n    const { left, top, width, height } = this.colorPicker.current.getBoundingClientRect()\n    const x = Math.min(width, Math.max(0, e.x - left)) - (cursorWidth / 2)\n    const y = Math.min(height, Math.max(0, e.y - top)) - (cursorHeight / 2)\n    this.setState({\n      picker: { x, y }\n    })\n    const color = {\n      h: Math.floor(x / width * 350),\n      s: 1,\n      l: y / height,\n    }\n    this.props.updateColor(color)\n  }\n\n  getGradientLight (e) {\n    const { width: cursorWidth, height: cursorHeight } = this.gradientLight_cursor.current.getBoundingClientRect()\n    const { left, top, width, height } = this.gradientLight.current.getBoundingClientRect()\n    const x = Math.min(width, Math.max(0, e.x - left)) - (cursorWidth / 2)\n    const y = Math.min(height, Math.max(0, e.y - top)) - (cursorHeight / 2)\n    this.setState({\n      gradientLight: { x, y }\n    })\n    const color = {\n      h: Math.floor(x / width * 350),\n      s: 1,\n      l: y / height,\n    }\n    this.props.updateBackground({ to: color })\n  }\n\n  getGradientDark (e) {\n    const { width: cursorWidth, height: cursorHeight } = this.gradientDark_cursor.current.getBoundingClientRect()\n    const { left, top, width, height } = this.gradientDark.current.getBoundingClientRect()\n    const x = Math.min(width, Math.max(0, e.x - left)) - (cursorWidth / 2)\n    const y = Math.min(height, Math.max(0, e.y - top)) - (cursorHeight / 2)\n    this.setState({\n      gradientDark: { x, y }\n    })\n    const color = {\n      h: Math.floor(x / width * 350),\n      s: 1,\n      l: y / height,\n    }\n    this.props.updateBackground({ from: color })\n  }\n\n  componentDidMount () {\n    this.colorPicker.current.addEventListener('mousedown', () => {\n      this.colorPicker.current.addEventListener('mousemove', this.getColor)\n    })\n    this.gradientLight.current.addEventListener('mousedown', () => {\n      this.gradientLight.current.addEventListener('mousemove', this.getGradientLight)\n    })\n    this.gradientDark.current.addEventListener('mousedown', () => {\n      this.gradientDark.current.addEventListener('mousemove', this.getGradientDark)\n    })\n\n    window.addEventListener('mouseup', () => {\n      this.colorPicker.current.removeEventListener('mousemove', this.getColor)\n      this.gradientLight_cursor.current.removeEventListener('mousemove', this.getGradientLight)\n      this.gradientDark_cursor.current.removeEventListener('mousemove', this.getGradientDark)\n    })\n\n  }\n\n  render () {\n    return <div className=\"ui__wrapper\">\n\n        <h2>User preferences</h2>\n\n        <div className=\"ui__controls\">\n\n          <div className=\"ui__item\">\n            <input\n              id=\"show-tick\"\n              name=\"show-tick\"\n              type=\"checkbox\"\n              onClick={ this.props.toggleTick }\n            />\n            <label htmlFor=\"show-tick\">Show ticks</label>\n          </div>\n\n          <div className=\"ui__item\">\n            <label htmlFor=\"\">Background colour</label>\n            <div className=\"ui__colorPicker\" ref={ this.gradientLight }>\n              <span\n                className=\"ui__picker__cursor\"\n                ref={ this.gradientLight_cursor }\n                style={{\n                  transform: `translate(${this.state.gradientLight.x}px, ${this.state.gradientLight.y}px)`\n                }}\n              ></span>\n            </div>\n\n            <div className=\"ui__colorPicker\" ref={ this.gradientDark }>\n              <span\n                className=\"ui__picker__cursor\"\n                ref={ this.gradientDark_cursor }\n                style={{\n                  transform: `translate(${this.state.gradientDark.x}px, ${this.state.gradientDark.y}px)`\n                }}\n              ></span>\n            </div>\n          </div>\n\n          <div className=\"ui__item\">\n            <label htmlFor=\"\">Clock colour</label>\n            <div className=\"ui__colorPicker\" ref={ this.colorPicker }>\n              <span\n                className=\"ui__picker__cursor\"\n                ref={ this.pickerCursor }\n                style={{\n                  transform: `translate(${this.state.picker.x}px, ${this.state.picker.y}px)`\n                }}\n              ></span>\n            </div>\n          </div>\n\n        </div>\n\n\n      <style jsx>{`\n\n        .ui__wrapper {\n          position: relative;\n          display: black;\n          width: 100%;\n          background: hsla(0, 0, 100%, 0.4);\n          color: white;\n        }\n\n        .ui__controls {\n          display: flex;\n        }\n\n        .ui__item {\n          flex: 1 1 auto;\n          position: relative;\n          display: inline-block;\n          padding: 16px;\n          text-align: left;\n        }\n\n        .ui__wrapper label {\n          display: block;\n          text-align: left;\n          margin-bottom: 12px;\n        }\n        .ui__wrapper input + label {\n          display: inline-block;\n        }\n        .ui__colorPicker {\n          position: relative;\n          width: 100%;\n          height: 150px;\n          background-image:\n            linear-gradient(hsla(0, 100%, 0%, 1), hsla(0, 100%, 100%, 0), hsla(0, 100%, 100%, 100%)),\n            linear-gradient(90deg, hsl(0, 100%, 50%), hsl(50, 100%, 50%), hsl(100, 100%, 50%), hsl(150, 100%, 50%), hsl(200, 100%, 50%), hsl(250, 100%, 50%), hsl(300, 100%, 50%), hsl(350, 100%, 50%))\n        }\n\n        .ui__picker__cursor {\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: 15px;\n          height: 15px;\n          border: solid 1px black;\n          background: white;\n          border-radius: 20px;\n          padding: 0;\n          z-index: 100\n        }\n      \n      `}</style>\n    </div>\n  }\n}\n\nexport default StylingUI\n","import React, { Component } from 'react'\nimport './App.css'\n\nimport Digit from './components/digit'\nimport StylingUI from './components/styling-ui'\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      number: 0,\n      dateNow: 0,\n      time: {\n        hours: 0,\n        minutes: 0,\n        seconds: 0,\n      },\n      color: {\n        h: 0,\n        s: 1,\n        l: 0.5,\n      },\n      background: {\n        from: { h: 210, s: 0, l: 0 },\n        to: { h: 210, s: 1, l: 0.1 },\n      },\n      showUI: false,\n      tick: false,\n    }\n    this.counter = this.counter.bind(this)\n    this.updateDate = this.updateDate.bind(this)\n    this.updateColor = this.updateColor.bind(this)\n    this.updateBackground = this.updateBackground.bind(this)\n    this.toggleUI = this.toggleUI.bind(this)\n    this.toggleTick = this.toggleTick.bind(this)\n  }\n\n  updateDate () {\n    const d = new Date()\n    this.setState({\n      dateNow: Date.now(),\n      time: {\n        hours: d.getHours(),\n        minutes: `0${d.getMinutes()}`.slice(-2),\n        seconds: `0${d.getSeconds()}`.slice(-2),\n      }\n    })\n  }\n\n  counter () {\n    this.setState({\n      number: this.state.number === 9 ? 0 : this.state.number + 1,\n    })\n    this.updateDate()\n  }\n\n  updateColor ({ h, s, l }) {\n    this.setState({\n      color: { h, s, l }\n    })\n  }\n\n  updateBackground ({ from, to }) {\n    console.log({ from, to })\n    let updateFrom = this.state.background.from\n    let updateTo = this.state.background.to\n    if (from) updateFrom = from\n    if (to) updateTo = to\n    this.setState({\n      background: {\n        to: updateTo,\n        from: updateFrom,\n      }\n    })\n  }\n\n  toggleUI () {\n    this.setState({ showUI: !this.state.showUI })\n  }\n\n  toggleTick (e) {\n    this.setState({ tick: e.target.checked })\n  }\n\n  componentWillMount () {\n    this.updateDate()\n  }\n\n  componentDidMount () {\n    setInterval(this.counter, 1000)\n  }\n\n  render () {\n    return (\n      <div className=\"App\" style={{\n        background: `linear-gradient(\n        hsl(\n          ${this.state.background.from.h},\n          ${this.state.background.from.s * 100}%,\n          ${this.state.background.from.l * 100}%\n        ),\n        hsl(\n          ${this.state.background.to.h},\n          ${this.state.background.to.s * 100}%,\n          ${this.state.background.to.l * 100}%\n        )` }}>\n        <div className=\"content\">\n        \n          <div className=\"clock\">\n            {\n              Object.keys(this.state.time)\n                .map((k, timeIndex) => <>\n                  {\n                    timeIndex !== 0 && <span\n                      key={ `tick-${timeIndex}` }\n                      className={\n                        !this.state.tick ? 'show' \n                          : parseInt(this.state.time.seconds, 10) % 2 \n                            ? 'show' \n                            : 'hide'\n                      }\n                    >:</span>\n                  }\n                  {\n                    `${this.state.time[k]}`\n                      .split('')\n                      .map((n, i) => <>\n                          <Digit\n                            key={ `digit-${i}` }\n                            number={ parseInt(n, 10) }\n                            color={ `hsl(${[\n                              this.state.color.h,\n                              `${this.state.color.s * 100}%`,\n                              `${this.state.color.l * 100}%`,\n                            ].join()}` }\n                          />\n                        </>\n                      )\n                  }\n                </>)\n            }\n          </div>\n          <button onClick={ this.toggleUI }>Show controls</button>\n          {\n            this.state.showUI && <StylingUI\n              updateColor={ this.updateColor }\n              updateBackground={ this.updateBackground }\n              toggleTick={ this.toggleTick }\n            />\n          }\n        </div>\n\n\n        <style jsx>{`\n          .App {\n            min-width: 100vw;\n            min-height: 100vh;\n          }\n          .content {\n            width: 80%;\n            max-width: 1200px;\n            margin: 0 auto;\n          }\n          .clock {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n          }\n\n          span {\n            transition: opacity 200ms;\n            position: relative;\n            display: inline-block;\n            color: white;\n            font-size: 60px;\n            line-height: 100px;\n            height: 100px;\n            padding: 20px\n          }\n          .show {\n            opacity: 1;\n          }\n          .hide {\n            opacity: 0;\n          }\n\n        `}</style>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}